name: Test
on:
  workflow_call:
    inputs:
      languageServerVersion:
        description: Version of the nobl9-language-server to use in the tests
        type: string
        required: true
jobs:
  test:
    name: Run tests
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    env:
      NOBL9_LS_BASE_URL: https://github.com/nobl9/nobl9-language-server/releases/download
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.19.4
          cache: "yarn"
      - name: Install dependencies
        run: yarn install --immutable
      - name: Install nobl9-language-server (Linux)
        if: runner.os == 'Linux'
        run: |
          VERSION=${{ inputs.languageServerVersion }}
          curl -fsSL -o nobl9-language-server "${NOBL9_LS_BASE_URL}/v${VERSION}/nobl9-language-server-${VERSION}-linux-amd64"
          chmod +x nobl9-language-server
          sudo mv nobl9-language-server /usr/local/bin/
      - name: Install nobl9-language-server (macOS)
        if: runner.os == 'macOS'
        run: |
          VERSION=${{ inputs.languageServerVersion }}
          curl -fsSL -o nobl9-language-server "${NOBL9_LS_BASE_URL}/v${VERSION}/nobl9-language-server-${VERSION}-darwin-amd64"
          chmod +x nobl9-language-server
          sudo mv nobl9-language-server /usr/local/bin/
      - name: Install nobl9-language-server (Windows)
        if: runner.os == 'Windows'
        run: |
          $version = "${{ inputs.languageServerVersion }}"
          $url = "$env:NOBL9_LS_BASE_URL/v$version/nobl9-language-server-$version-windows-amd64.exe"
          $out = "$env:USERPROFILE\.cargo\bin\nobl9-language-server.exe"
          Invoke-WebRequest -Uri $url -OutFile $out
          echo "$env:USERPROFILE\.cargo\bin" | Out-File -Append -FilePath $env:GITHUB_PATH
      # xvfb-run is required on Linux.
      - name: Run tests (Linux)
        if: runner.os == 'Linux'
        run: xvfb-run -a yarn run test
        env:
          NOBL9_LANGUAGE_SERVER_CLIENT_ID: ${{ vars.NOBL9_LANGUAGE_SERVER_CLIENT_ID }}
          NOBL9_LANGUAGE_SERVER_CLIENT_SECRET: ${{ secrets.NOBL9_LANGUAGE_SERVER_CLIENT_SECRET }}
      - name: Run tests (Windows and macOS)
        if: runner.os != 'Linux'
        run: yarn run test
        env:
          NOBL9_LANGUAGE_SERVER_CLIENT_ID: ${{ vars.NOBL9_LANGUAGE_SERVER_CLIENT_ID }}
          NOBL9_LANGUAGE_SERVER_CLIENT_SECRET: ${{ secrets.NOBL9_LANGUAGE_SERVER_CLIENT_SECRET }}

